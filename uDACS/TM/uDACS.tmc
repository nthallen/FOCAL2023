%{
  #define rvals_to_float(x) (*(float*)&x)
  
  #include <math.h>
  
  /*
   * Steinhart/Hart conversion for uDACSB_T30K75KU
   * 30K Thermistor pulled up by 75K
   * Used with 24bit signed ADC AD7770 on uDACSB
   *
   * Created using arp-das-matlab/Therm/T30K75KU_uDACSB.m
   */
  double uDACSB_T30K75KU_2_Celcius(int32_t At) {
    double Rpu = 75e3;
    double Aref = 1<<23;
    double logR = log(At * Rpu / (Aref - At));
    double a0 = 9.3316e-04;
    double a1 = 2.2141e-04;
    double a3 = 1.2622e-07;
    double C = 1/(a0 + a1 * logR + a3*pow(logR,3)) - 273.15;
    return C;
  }

%}

/* uDACS DAC AD5664: 0-65536 = 0-5V */
TM typedef double uDACS_Volts_t { text "%7.4lf"; }
TM typedef uint16_t uDACS_DAC_t { text "%6.4lf"; convert uDACS_Volts_t; }
  Calibration (uDACS_DAC_t, uDACS_Volts_t) { 0, 0, 65536, 5 }

/* uDACS_ADC: AD7770: 32 bits */
/* Address 0x14 AD7770 subsystem status */
TM typedef uint16_t uDACS_AD7770_status_t { text "%04X"; }
/* Raw 32-bit AIN readings */
TM typedef uint32_t uDACS_AD7770_rawAI_t { text "%13lu"; }
/* Error header (high byte of AD7770_rawAI_t) */
TM typedef uint8_t uDACS_AD7770_AI_stat_t { text "%02X"; }
/* 24-bit AD7770 AIN reading */
TM typedef int32_t uDACS_AD7770_AI_t { text "%9.4lf"; convert uDACS_Volts_t; }
  Calibration (uDACS_AD7770_AI_t, uDACS_Volts_t) {
    -8388610, -9999,
    -8388609, -9999,
    -8388608, -2.5,
    8388608, 2.5,
    8388609, 9999,
    8388610, 9999
  }
TM typedef double uDACS_CELCIUS { text "%7.3lf"; }
TM typedef int32_t uDACS_T30K75KU {
  text "%8.3lf";
  convert uDACS_CELCIUS uDACSB_T30K75KU_2_Celcius();
}
TM typedef double uDACS_TORR;
TM typedef uDACS_AD7770_AI_t uDACS_Baratron_100Torr_t {
  convert uDACS_TORR;
  text "%7.3lf";
}
/* Calibration assumes the Baratron zero offset is adjusted
   to 0.5 V and the resistor network is 3.74K over 12.1K for
   a ratio of 0.236111
*/
Calibration (uDACS_Baratron_100Torr_t, uDACS_TORR) {
          -2, -9999,
          -1, -9999,
           0, -0.7647,
  8053063.68, 100.8824,
  8053064,     9999,
  8053065,     9999
}

TM typedef uint16_t uDACS_AD7770_count_t { text "%5u"; }

TM typedef int32_t uDACS_sec { text "%13.5lf"; }
TM typedef double uDACS_msec;
TM typedef uint32_t RTC_elapsed_t { text "%13lu"; }
TM typedef uint16_t RTC_loopdur_t { text "%6.2lf"; convert uDACS_msec; }
  Calibration (RTC_loopdur_t, uDACS_msec) { 0, 0, 100, 1 }

TM typedef float MS5607_P_t { text "%8.3lf"; } /* mbar */
TM typedef float MS5607_T_t { text "%7.3lf"; } /* Celcius */
TM typedef float MS5607_RH_t { text "%6.2lf"; } /* Percent RH */

TM typedef uint8_t uDACS_Fail_t { text "%02X"; }
TM typedef uint8_t uDACS_PwrStat_t { text "%02X"; }
